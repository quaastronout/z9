def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg2, arg1):
        var7.func3(arg1, arg2)
    def func12(arg41, arg42):
        var43 = 1855791935 & arg42
        if arg42 < arg1:
            var44 = arg2 | arg1
        else:
            var44 = -2120282679 | var43 - 927901865
        result = arg2 ^ arg42 | var43
        return result
    var45 = func12(arg2, arg1)
    if arg2 < var45:
        var50 = class13()
    else:
        var50 = class15()
    for var51 in xrange(37):
        var50.func14(arg1, var45)
    var52 = arg1 ^ var45 & arg2 - 550
    if var45 < arg1:
        var53 = var45 ^ arg1 & var52
    else:
        var53 = arg1 + var45 + var52 - 1176045087
    var54 = ((var45 ^ arg2) | arg2) & -1971317270
    var55 = (var52 + var54 - arg1) - -342747607
    var56 = (arg2 & var54) + (arg1 - var45)
    var57 = var54 - arg2
    var58 = ((var45 + var52) - var52) & arg1
    var59 = arg2 ^ 539 + var58 | var57
    var60 = var56 | ((var57 - var58) & var45)
    var61 = (arg2 | var45) ^ var59
    var62 = var45 + (-330561897 + var59) + var55
    result = 220 | var59
    return result
class class15(object):
    def func14(self, arg48, arg49):
        return 0
class class13(class15):
    def func14(self, arg46, arg47):
        result = -1296463814 - -536482110 - (arg46 - 0)
        return result
def func7(arg11, arg12):
    if arg12 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in range(31):
        var19 = var17.func9
        var19(arg12, arg11)
    var20 = 495717283 & 498
    var21 = -57 - (-1273730493 & arg12) & var20
    var22 = -426 & arg12 & 1336064874 & var21
    var23 = (var20 & arg12 ^ var20) + 1892491971
    var24 = arg12 | var21 | arg11 - var22
    var25 = (var21 | 1822063999 ^ arg11) + var23
    var26 = var21 | var25 - var25
    var27 = arg12 | var23 | 210974600 - var22
    var28 = -360 & (var22 & var26 ^ var22)
    if var20 < arg11:
        var29 = (var21 ^ var28 & var24) ^ var22
    else:
        var29 = (arg11 + var23 ^ var25) + var26
    result = var24 + (var22 + (var22 & 325 | arg11 + (-631 & var25) + var22))
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(class10):
    def func9(self, arg13, arg14):
        result = -1713651346 | 998356864 | 1745300585 ^ ((1 + arg13 | 0) & arg13)
        return result
def func6(arg9, arg10):
    var30 = func7(arg9, arg10)
    yield var30
    var31 = arg9 | arg9 ^ (arg10 | -339)
    yield var31
    var32 = (var31 ^ -812) ^ arg10
    yield var32
    var33 = (arg9 - (1809697528 ^ arg10)) - -350170018
    yield var33
    var34 = var33 - (1742647809 | -1343512071 + var31)
    yield var34
    var35 = arg9 & var34 - arg9
    yield var35
    var36 = var32 & arg9 + var34 + -614
    yield var36
    var37 = var34 + ((var31 - arg9) + 387)
    yield var37
    var38 = (var35 + var36 & var31) | var35
    yield var38
    var39 = -105 - var33 + var31 | var36
    yield var39
    var40 = (305 + var31 & var32) & arg9
    yield var40
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = -1 + -746029007
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 17'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
